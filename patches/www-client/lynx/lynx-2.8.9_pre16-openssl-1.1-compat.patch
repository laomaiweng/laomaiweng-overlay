diff --git a/WWW/Library/Implementation/HTNews.c b/WWW/Library/Implementation/HTNews.c
index 6e38b51..7b27800 100644
--- a/WWW/Library/Implementation/HTNews.c
+++ b/WWW/Library/Implementation/HTNews.c
@@ -2657,7 +2657,9 @@ static int HTLoadNews(const char *arg,
 			CTRACE((tfp,
 				"HTNews: Unable to complete SSL handshake for '%s', SSL_connect=%d, SSL error stack dump follows\n",
 				url, status));
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 			SSL_load_error_strings();
+#endif
 			while ((SSLerror = ERR_get_error()) != 0) {
 			    CTRACE((tfp, "HTNews: SSL: %s\n",
 				    ERR_error_string(SSLerror, NULL)));
@@ -3072,7 +3074,9 @@ int HTNewsProxyConnect(int sock,
 	CTRACE((tfp,
 		"HTNews: Unable to complete SSL handshake for '%s', SSL_connect=%d, SSL error stack dump follows\n",
 		url, status));
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	SSL_load_error_strings();
+#endif
 	while ((SSLerror = ERR_get_error()) != 0) {
 	    CTRACE((tfp, "HTNews: SSL: %s\n", ERR_error_string(SSLerror, NULL)));
 	}
diff --git a/WWW/Library/Implementation/HTTP.c b/WWW/Library/Implementation/HTTP.c
index 581cb5e..dab2ff6 100644
--- a/WWW/Library/Implementation/HTTP.c
+++ b/WWW/Library/Implementation/HTTP.c
@@ -48,6 +48,10 @@
 #ifdef USE_SSL
 #ifdef USE_OPENSSL_INCL
 #include <openssl/x509v3.h>
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+#define SSLEAY_VERSION_NUMBER OPENSSL_VERSION_NUMBER
+#define ASN1_STRING_data ASN1_STRING_get0_data
+#endif
 #endif
 #ifdef USE_GNUTLS_INCL
 #include <gnutls/x509.h>
@@ -173,8 +177,12 @@ SSL *HTGetSSLHandle(void)
 	    X509_set_default_verify_paths(ssl_ctx->cert);
 	}
 #else
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	SSLeay_add_ssl_algorithms();
 	if ((ssl_ctx = SSL_CTX_new(SSLv23_client_method())) != NULL) {
+#else
+	if ((ssl_ctx = SSL_CTX_new(TLS_client_method())) != NULL) {
+#endif
 #ifdef SSL_OP_NO_SSLv2
 	    SSL_CTX_set_options(ssl_ctx, SSL_OP_ALL | SSL_OP_NO_SSLv2);
 #else
@@ -961,7 +969,9 @@ static int HTLoadHTTP(const char *arg,
 		CTRACE((tfp,
 			"HTTP: Unable to complete SSL handshake for '%s', SSL_connect=%d, SSL error stack dump follows\n",
 			url, status));
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 		SSL_load_error_strings();
+#endif
 		while ((SSLerror = ERR_get_error()) != 0) {
 		    CTRACE((tfp, "HTTP: SSL: %s\n", ERR_error_string(SSLerror, NULL)));
 		}
